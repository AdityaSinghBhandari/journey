#include <bits/stdc++.h>
using namespace std;
int main(){
    int n=967;
vector<int>s1={1, 320, 35, 429, 41, 110, 768, 168, 653, 818, 623, 828, 336, 536, 373, 500, 230, 965, 927, 395, 152, 138, 39, 628, 660, 462, 196, 389, 795, 627, 318, 216, 663, 797, 186, 549, 553, 615, 411, 876, 907, 552, 857, 887, 564, 613, 679, 169, 523, 652, 232, 508, 541, 259, 189, 681, 16, 327, 58, 367, 851, 948, 812, 453, 236, 200, 386, 777, 926, 197, 845, 224, 557, 607, 560, 190, 437, 834, 420, 126, 538, 729, 398, 739, 537, 609, 76, 286, 901, 412, 2, 624, 600, 543, 136, 120, 28, 382, 174, 598, 566, 668, 483, 20, 376, 445, 727, 62, 408, 632, 505, 661, 117, 669, 265, 344, 925, 922, 642, 953, 383, 594, 847, 838, 759, 637, 726, 744, 848, 423, 942, 171, 458, 149, 241, 202, 745, 44, 363, 111, 787, 894, 685, 858, 672, 958, 83, 633, 869, 960, 569, 683, 329, 381, 854, 933, 413, 442, 322, 8, 226, 40, 23, 846, 765, 191, 125, 742, 586, 936, 339, 604, 97, 781, 350, 645, 352, 132, 170, 461, 734, 469, 37, 68, 947, 399, 46, 22, 699, 157, 25, 671, 36, 12, 562, 319, 155, 434, 646, 266, 237, 377, 228, 531, 545, 181, 852, 680, 4, 855, 49, 786, 410, 883, 912, 366, 343, 324, 701, 890, 154, 822, 64, 605, 516, 867, 967, 491, 504, 287, 524, 160, 751, 361, 771, 923, 874, 101, 850, 704, 402, 568, 314, 17, 304, 529, 296, 715, 898, 693, 309, 774, 747, 877, 112, 546, 849, 217, 133, 312, 920, 419, 610, 644, 268, 514, 563, 509, 590, 90, 664, 151, 415, 79, 104, 75, 707, 436, 618, 212, 720, 484, 86, 811, 963, 60, 10, 946, 902, 128, 540, 722, 209, 250, 370, 548, 827, 871, 142, 513, 298, 51, 596, 32, 455, 696, 14, 95, 371, 527, 794, 67, 140, 758, 81, 512, 146, 362, 368, 193, 150, 477, 662, 784, 556, 172, 863, 139, 38, 966, 606, 718, 931, 50, 297, 939, 404, 655, 688, 301, 951, 187, 221, 48, 796, 281, 873, 766, 793, 407, 913, 394, 124, 736, 277, 7, 860, 582, 358, 695, 254, 559, 706, 213, 282, 580, 762, 551, 601, 441, 153, 631, 879, 34, 782, 603, 911, 211, 625, 422, 629, 100, 612, 875, 807, 321, 667, 816, 249, 741, 292, 409, 239, 31, 880, 13, 474, 240, 448, 820, 843, 194, 295, 943, 570, 447, 418, 223, 416, 878, 472, 438, 164, 641, 473, 957, 460, 578, 792, 803, 302, 906, 964, 450, 677, 325, 347, 52, 380, 785, 18, 346, 369, 147, 440, 242, 635, 59, 626, 870, 56, 340, 215, 91, 709, 73, 463, 674, 24, 475, 387, 935, 244, 105, 859, 904, 246, 640, 622, 881, 74, 532, 471, 247, 465, 330, 118, 417, 547, 365, 789, 77, 72, 107, 470, 378, 842, 565, 391, 331, 446, 357, 285, 334, 882, 761, 273, 235, 317, 889, 495, 899, 251, 740, 108, 573, 166, 945, 932, 581, 778, 354, 326, 479, 253, 651, 900, 719, 248, 832, 806, 690, 937, 905, 779, 587, 9, 743, 687, 400, 819, 542, 428, 731, 788, 584, 813, 379, 467, 621, 732, 15, 63, 755, 3, 892, 561, 954, 222, 817, 341, 724, 659, 159, 918, 388, 691, 333, 694, 961, 29, 225, 775, 179, 374, 503, 227, 865, 233, 614, 94, 700, 180, 144, 258, 837, 449, 66, 678, 502, 593, 85, 924, 106, 430, 261, 772, 323, 756, 611, 123, 800, 539, 749, 579, 92, 893, 439, 210, 853, 82, 754, 915, 384, 934, 885, 42, 480, 280, 634, 414, 829, 725, 656, 220, 454, 544, 717, 826, 886, 396, 825, 5, 525, 478, 305, 201, 93, 710, 940, 337, 752, 888, 65, 464, 799, 648, 654, 494, 952, 486, 284, 116, 70, 204, 497, 896, 763, 260, 702, 713, 21, 830, 203, 861, 307, 558, 810, 647, 306, 183, 173, 841, 167, 703, 824, 764, 572, 488, 30, 71, 748, 650, 575, 255, 686, 597, 84, 595, 676, 148, 730, 481, 185, 791, 750, 515, 257, 576, 630, 485, 868, 121, 721, 178, 840, 192, 57, 955, 735, 134, 351, 443, 746, 526, 231, 670, 468, 364, 328, 198, 421, 311, 332, 375, 175, 432, 638, 33, 776, 80, 11, 401, 770, 903, 256, 43, 930, 272, 141, 406, 487, 385, 165, 708, 738, 501, 184, 599, 451, 349, 122, 929, 98, 821, 19, 535, 69, 675, 555, 390, 137, 921, 88, 914, 498, 252, 360, 205, 808, 294, 207, 283, 466, 697, 114, 427, 583, 315, 392, 489, 714, 928, 728, 692, 616, 456, 949, 510};



vector <int> sn={967, 816, 249, 281, 848, 642, 374, 671, 428, 236, 17, 867, 948, 136, 873, 167, 726, 744, 663, 423, 907, 398, 960, 344, 925, 922, 318, 953, 232, 729, 731, 788, 913, 584, 850, 704, 402, 568, 314, 200, 373, 304, 529, 296, 672, 715, 395, 834, 564, 125, 963, 557, 60, 413, 516, 851, 812, 491, 504, 287, 524, 600, 543, 462, 191, 887, 85, 467, 434, 621, 703, 824, 295, 86, 943, 570, 942, 171, 653, 216, 447, 418, 223, 416, 878, 472, 645, 845, 133, 552, 623, 857, 322, 8, 226, 40, 152, 146, 362, 368, 387, 83, 633, 869, 615, 935, 32, 190, 455, 151, 612, 875, 807, 321, 667, 669, 265, 383, 594, 117, 847, 838, 759, 741, 292, 409, 239, 854, 31, 699, 157, 25, 16, 828, 81, 512, 900, 18, 598, 915, 43, 903, 11, 24, 556, 640, 678, 502, 898, 693, 309, 110, 500, 453, 644, 906, 15, 593, 282, 889, 924, 954, 811, 966, 128, 76, 685, 858, 549, 958, 67, 241, 420, 138, 126, 538, 696, 14, 613, 679, 334, 882, 736, 707, 436, 618, 212, 720, 484, 224, 927, 547, 365, 79, 789, 381, 933, 876, 77, 72, 964, 352, 894, 775, 302, 330, 179, 154, 822, 64, 605, 319, 160, 751, 36, 324, 367, 701, 890, 361, 771, 503, 923, 227, 871, 142, 513, 298, 51, 951, 865, 233, 164, 187, 339, 221, 48, 796, 445, 389, 39, 628, 168, 660, 285, 939, 754, 259, 646, 284, 721, 346, 360, 183, 914, 30, 307, 454, 317, 97, 655, 396, 481, 438, 329, 818, 35, 797, 637, 325, 111, 419, 611, 572, 934, 222, 49, 799, 648, 654, 172, 185, 791, 750, 559, 475, 843, 904, 246, 483, 132, 170, 415, 926, 197, 965, 104, 75, 846, 391, 674, 331, 546, 849, 777, 217, 23, 765, 739, 537, 609, 166, 213, 253, 888, 687, 266, 635, 59, 626, 870, 56, 340, 215, 91, 709, 73, 463, 545, 553, 411, 478, 34, 147, 820, 622, 722, 209, 366, 250, 370, 548, 827, 596, 560, 437, 305, 201, 123, 606, 718, 931, 50, 297, 756, 641, 595, 825, 764, 629, 100, 407, 28, 880, 13, 120, 766, 793, 782, 505, 627, 661, 603, 911, 562, 211, 625, 422, 474, 240, 306, 155, 95, 448, 247, 465, 22, 118, 417, 46, 676, 881, 242, 9, 743, 677, 785, 400, 819, 542, 680, 4, 681, 336, 327, 169, 523, 41, 536, 652, 752, 380, 174, 566, 196, 394, 740, 375, 832, 384, 755, 905, 735, 784, 860, 690, 5, 106, 902, 540, 230, 1, 386, 874, 101, 388, 610, 268, 514, 363, 515, 257, 341, 826, 62, 580, 762, 364, 650, 328, 385, 165, 852, 495, 561, 544, 66, 189, 377, 228, 531, 469, 404, 369, 44, 787, 440, 794, 140, 758, 725, 656, 220, 578, 792, 803, 149, 202, 745, 186, 371, 527, 742, 586, 936, 604, 781, 350, 94, 702, 124, 277, 42, 480, 749, 280, 634, 582, 414, 829, 20, 358, 695, 607, 446, 691, 885, 258, 837, 449, 74, 631, 532, 471, 569, 683, 442, 443, 576, 945, 932, 581, 778, 354, 573, 326, 479, 651, 774, 430, 379, 813, 225, 508, 614, 12, 333, 883, 912, 343, 694, 961, 806, 29, 700, 3, 770, 382, 107, 180, 144, 470, 624, 525, 357, 487, 153, 800, 539, 210, 664, 853, 82, 173, 841, 93, 706, 376, 795, 727, 408, 286, 901, 412, 2, 439, 579, 541, 38, 137, 332, 921, 260, 713, 488, 71, 688, 558, 122, 599, 859, 320, 458, 194, 477, 879, 450, 347, 52, 708, 738, 244, 351, 632, 817, 724, 69, 141, 863, 494, 668, 7, 719, 248, 563, 509, 590, 90, 565, 57, 955, 323, 159, 747, 877, 112, 312, 920, 378, 842, 193, 150, 662, 139, 732, 63, 772, 485, 178, 840, 192, 486, 337, 896, 148, 730, 918, 10, 946, 929, 501, 70, 204, 497, 116, 763, 441, 855, 686, 597, 21, 830, 84, 498, 252, 399, 630, 108, 121, 256, 746, 181, 58, 786, 461, 734, 37, 68, 947, 251, 489, 714, 928, 33, 776, 937, 401, 886, 429, 273, 92, 893, 261, 294, 717, 410, 575, 427, 583, 808, 272, 899, 198, 237, 957, 940, 451, 349, 601, 473, 460, 710, 761, 235, 231, 105, 466, 175, 432, 638, 65, 80, 406, 98, 254, 551, 301, 952, 692, 616, 203, 861, 768, 868, 134, 748, 205, 675, 526, 207, 283, 464, 88, 670, 892, 659, 779, 587, 421, 311, 949, 184, 468, 930, 821, 19, 255, 810, 647, 555, 390, 510, 535, 697, 114, 315, 392, 728, 456};


sort(s1.begin(),s1.end());
sort(sn.begin(),sn.end());
int c1=s1.size();
int c2=sn.size();
int diff=n+1;
if (s1.size()>=sn.size())
{for (int i=0; i<c1; i++) 
{
    if(binary_search(sn.begin(),sn.end(),s1[i])==true) {diff=0; break;}
    else {
        auto ptr=lower_bound(sn.begin(),sn.end(),s1[i]);
        if (ptr!=sn.end()) {diff=min(diff, (abs(*ptr - s1[i])));}
        if (ptr!=sn.begin()) {diff=min(diff, (abs(s1[i]-*(ptr-1))));}
        
        

    }
}}

else //sn size is bigger than s1, so go element by element of sn, binary search on s1
{
 for (int i=0; i<c2; i++)
 {
   if (binary_search(s1.begin(),s1.end(),sn[i])==true) {diff=0; break;}
   else {
    auto ptr=lower_bound(s1.begin(),s1.end(),sn[i]);
    if (ptr!=s1.end()) {diff=min(diff, (abs(*ptr -sn[i])));}
    if (ptr!=s1.begin()) {diff=min(diff, abs((*(ptr-1)-sn[i])));}
   
   }
 }
}
cout<<diff;
return(0);
}

